
This is a slightly patched version of GNU m4.

This was originally imported as m4 1.4, and then updated to 1.4.1 and
1.4.2 (see the FSF vendor branch for details).

The differences consist of those few changes needed to weave the
package into the Starlink build system, and can be seen with the
command

    % cvs diff -r FSF

To import a new release, follow the usual instructions for doing a
CVS import, for example, to go from 1.4 to 1.4.1:

    % cd /tmp
    % tar xzf m4-1.4.1.tar.gz
    % cd m4-1.4.1
    % cvs -d $starcvs import -m "Import of m4 1.4.1" \
        thirdparty/fsf/m4 FSF m4-1-4-1
    % cd /tmp
    % cvs -d $starcvs co -jm4-1-4 -jm4-1-4-1 thirdparty/fsf/m4
    % cd thirdparty/fsf/m4

At this point, resolve any conflicts that have arisen.

There are general notes on what to do next in
thirdparty/fsf/README.Starlink.  However m4 appears to be slightly
more fragile than the others -- which is to say, that it caused me
more trouble when I was updating m4 versions -- so the more detailed
notes below might be of some use.



It's not completely clear what to do next.

I think the best thing to do is to regenerate the config files from
their distributed sources, since we have some modifications in
configure.in.  This should probably be done using the standard
autotools, as opposed to the Starlink versions, using versions within
spitting distance of those used to generate the distribution (which
appears to have been autoconf 2.59 for m4 1.4.2; earlier versions used
much earlier versions of autoconf).  That ensures that our
modifications are propagated into the ./configure, and ensures that the
timestamps are brought into the right order.

That is, just run `autoreconf' after you've resolved any conflicts.
There appear to always be conflicts in the indexes of m4.info,
presumably because that was generated using a _slightly_ different
version of makeinfo.  It seems best, therefore, to remake m4.info from
scratch (cd doc;rm m4.info; make m4.info).

Finally, be careful to commit the regenerated ./configure AFTER
committing the other changes.  This means that the committed configure
will have a later timestamp, in the repository, than the other files,
so it won't be spuriously regenerated after a checkout.

The problem is as follows:
When m4 is being built as part of the Starlink build system, it is
built in a context which does not have any of the autotools available,
it is therefore important that it does not call any.  CVS preserves
timestamps on checkout, though it doesn't on updates, what's checked
in, therefore, must be checked out in such a way that stamp-h.in is no
older than configure.in, aclocal.m4 and acconfig.h, and configure no
older than configure.in and aclocal.m4.  Note that CVS appears to use
the one-second-resolution _commit_ time as a timestamp in the
repository.  What's currently in the repository (2005 February 11)
appears to work, but it would be nice to feel this was less fragile.

